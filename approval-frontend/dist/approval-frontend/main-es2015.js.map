{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.module.ts","./src/app/components/approve-solicitation/approve-solicitation.component.ts","./src/app/components/approve-solicitation/approve-solicitation.component.html","./src/app/components/create-solicitation/create-solicitation.component.ts","./src/app/components/create-solicitation/create-solicitation.component.html","./src/app/components/solicitation-list/solicitation-list.component.ts","./src/app/components/solicitation-list/solicitation-list.component.html","./src/app/models/solicitation.ts","./src/app/models/status.ts","./src/app/services/solicitation.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Fluxo de Aprovação';\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a routerLink=\"new\" class=\"nav-link\" routerLinkActive=\"active\">Nova Solicitação</a>\n  </li>\n    <li class=\"nav-item\">\n        <a routerLink=\"solicitations\" class=\"nav-link\" routerLinkActive=\"active\">Solicitações</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <hr>\n  <div class=\"card\">\n    <div class=\"card-body\">\n  <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n  </div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app.routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\nimport { AppComponent } from './app.component';\nimport { CreateSolicitationComponent } from './components/create-solicitation/create-solicitation.component';\nimport { SolicitationListComponent } from './components/solicitation-list/solicitation-list.component';\nimport { ApproveSolicitationComponent } from './components/approve-solicitation/approve-solicitation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateSolicitationComponent,\n    SolicitationListComponent,\n    ApproveSolicitationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CurrencyMaskModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateSolicitationComponent } from './components/create-solicitation/create-solicitation.component';\r\nimport { SolicitationListComponent } from './components/solicitation-list/solicitation-list.component';\r\nimport { ApproveSolicitationComponent } from './components/approve-solicitation/approve-solicitation.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'solicitation', pathMatch: 'full' },\r\n    { path: '', component: CreateSolicitationComponent},\r\n    { path: 'new', component: CreateSolicitationComponent},\r\n    { path: 'solicitations', component: SolicitationListComponent},\r\n    { path: 'solicitations/approve/:id', component: ApproveSolicitationComponent},\r\n];\r\n\r\n@NgModule({\r\n    imports:[RouterModule.forRoot(routes)],\r\n    exports:[RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule{\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SolicitationService } from 'src/app/services/solicitation.service';\nimport { Solicitation } from 'src/app/models/solicitation';\nimport { Status } from 'src/app/models/status';\n\n@Component({\n  selector: 'app-approve-solicitation',\n  templateUrl: './approve-solicitation.component.html',\n  styleUrls: ['./approve-solicitation.component.css']\n})\nexport class ApproveSolicitationComponent implements OnInit {\n\n  solicitationToEdit: Solicitation = new Solicitation();\n  situation: Status = Status.APROVADO;\n\n  constructor(private solicitationService: SolicitationService,\n              private route: ActivatedRoute,\n              private router: Router){ }\n\n  ngOnInit(): void {\n    this.solicitationService.getSolicitationById(this.route.snapshot.paramMap.get('id'))\n    .subscribe(solicitation => this.solicitationToEdit = solicitation);\n  }\n\n\n  closeEdit(){\n    this.router.navigate([\"/solicitations\"]);\n  }\n\n  changeOption(situation: Status) {\n    this.situation = situation;\n  }\n\n  updateSolicitation(){\n    this.solicitationToEdit.status = this.situation;\n    this.solicitationService.updateSolicitation(this.solicitationToEdit)\n    .subscribe(data => this.onReturn(data), error => console.log(error));\n  }\n\n  onReturn(data: Object){\n    console.log(data);\n    this.closeEdit();\n  }\n\n  pendingStatus(status: Status): boolean{\n    return status === Status.PENDENTE;\n  }\n\n}\n","<div>\n    <form (ngSubmit)=\"f.form.valid && updateSolicitation()\" #f=\"ngForm\">\n      <div class=\"form-group\">\n        <label for=\"name\">Nome</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" readonly required [(ngModel)]=\"solicitationToEdit.name\" name=\"name\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"name\">Descrição</label>\n        <input type=\"text\" class=\"form-control\" id=\"description\" readonly required [(ngModel)]=\"solicitationToEdit.description\" name=\"description\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"name\">Preço</label>\n        <input type=\"number\" class=\"form-control\" id=\"price\" step=\"0.01\" readonly required [(ngModel)]=\"solicitationToEdit.price\" name=\"price\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"name\">Observação</label>\n        <input type=\"text\" class=\"form-control\" id=\"observation\" required [(ngModel)]=\"solicitationToEdit.observation\" name=\"observation\" #obs=\"ngModel\">\n        <div *ngIf=\"f.submitted && obs.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"obs.errors.required\">O campo \"Observação\" é obrigatório. </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Situação</label>\n      <select class=\"form-control\" (change)=\"changeOption($event.target.value)\">\n        <option value=\"APROVADO\">Aprovada</option>\n        <option value=\"REJEITADO\">Rejeitada</option>\n      </select>\n    </div>\n      <span [hidden]=\"!pendingStatus(solicitationToEdit.status)\"><button type=\"submit\" class=\"btn btn-success commandButtons float-right\">Salvar</button></span>\n      <button (click)=\"closeEdit()\" class=\"btn btn-danger float-right commandButtons\">Cancelar</button>\n    </form>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SolicitationService } from 'src/app/services/solicitation.service';\nimport { Solicitation } from 'src/app/models/solicitation';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-solicitation',\n  templateUrl: './create-solicitation.component.html',\n  styleUrls: ['./create-solicitation.component.css']\n})\nexport class CreateSolicitationComponent implements OnInit {\n\n  solicitation: Solicitation = new Solicitation();\n  submitted = false;\n  submittedSuccess = false;\n\n  constructor(private solicitationService: SolicitationService, private router: Router) { }\n\n  ngOnInit(): void {  }\n\n  newSolicitation(): void {\n    this.submitted = false;\n    this.solicitation = new Solicitation();\n  }\n\n  tryAgain(): void {\n    this.submitted = false;\n    this.submittedSuccess = false;\n  }\n\n  onSubmit(){\n    this.solicitationService.createSolicitation(this.solicitation)\n    .subscribe(data => this.onSuccess(data), error => this.onError(error));\n    this.submitted = true;\n\n  }\n\n  onSuccess(data: Object){\n    console.log(data);\n    this.submittedSuccess = true;\n  }\n\n  onError(error: Object){\n    console.log(error);\n    this.submittedSuccess = false;\n  }\n\n  gotoList(){\n    this.router.navigate([\"/solicitations\"]);\n  }\n}\n","<h3>Nova solicitação</h3>\n<div [hidden]=\"submitted\">\n  <form (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"name\">Nome</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"solicitation.name\" name=\"name\" placeholder=\"Digite seu nome\" #name=\"ngModel\">\n      <div *ngIf=\"f.submitted && name.invalid\" class=\"alert alert-danger\">\n        <div *ngIf=\"name.errors.required\">O campo \"Nome\" é obrigatório. </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"name\">Descrição</label>\n        <input type=\"textarea\" class=\"form-control\" id=\"description\" required [(ngModel)]=\"solicitation.description\" name=\"description\" placeholder=\"Digite a descrição do item\" #desc=\"ngModel\">\n        <div *ngIf=\"f.submitted && desc.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"desc.errors.required\">O campo \"Descrição\" é obrigatório. </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"name\">Preço</label>\n        <input type=\"text\" class=\"form-control\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\"  id=\"price\" required [(ngModel)]=\"solicitation.price\" name=\"price\" placeholder=\"R$ 0,00\" #price=\"ngModel\">\n        <div *ngIf=\"f.submitted && price.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"price.errors.required\">O campo \"Preço\" é obrigatório. </div>\n        </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success float-right\">Salvar</button>\n  </form>\n</div>\n\n<div [hidden]=\"!(submitted && submittedSuccess)\">\n  <h4>Solicitação enviada!</h4>\n  <button class=\"btn btn-success\" (click)=\"newSolicitation()\">Nova Solicitação</button>\n</div>\n\n<div [hidden]=\"!(submitted && !submittedSuccess)\">\n  <h4>Erro ao enviar solicitação!</h4>\n  <button class=\"btn btn-success\" (click)=\"tryAgain()\">Tentar novamente</button>\n</div>\n","import { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SolicitationService } from 'src/app/services/solicitation.service';\nimport { Solicitation } from 'src/app/models/solicitation';\nimport { Status } from 'src/app/models/status';\n\n@Component({\n  selector: 'app-solicitation-list',\n  templateUrl: './solicitation-list.component.html',\n  styleUrls: ['./solicitation-list.component.css']\n})\nexport class SolicitationListComponent implements OnInit {\n\n  solicitations: Observable<Solicitation[]>;\n  nameToSearch = '';\n  descToSearch = '';\n\n  constructor(private solicitationService: SolicitationService,\n              private router: Router){}\n\n  ngOnInit(){\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.solicitations = this.solicitationService.getSolicitationsList();\n  }\n\n  getApprovedList() {\n    this.solicitations = this.solicitationService.getApprovedSolicitations();\n  }\n\n  getRejectedList() {\n    this.solicitations = this.solicitationService.getRejectedSolicitations();\n  }\n\n  getPendingList() {\n    this.solicitations = this.solicitationService.getPendingSolicitations();\n  }\n\n  getSolicitationsByName() {\n    if (this.nameToSearch !== ''){\n      this.solicitations = this.solicitationService.getSolicitationByName(this.nameToSearch);\n      this.descToSearch = '';\n    } else {\n      this.reloadData();\n    }\n  }\n\n  getSolicitationsByDesc() {\n    if (this.descToSearch !== ''){\n      this.solicitations = this.solicitationService.getSolicitationByDesc(this.descToSearch);\n      this.nameToSearch = '';\n    } else {\n      this.reloadData();\n    }\n  }\n\n  pendingStatus(status: Status): boolean{\n    return status === Status.PENDENTE;\n  }\n\n\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n      <h2>Lista de solicitações</h2>\n      <div class=\"row inputFilter\">\n        <div class=\"col-md-12 col-lg-6\">\n          <button (click)=\"reloadData()\" class=\"btn btn-info filterBtn\">Todas</button>\n          <button (click)=\"getPendingList()\" class=\"btn btn-primary filterBtn\">Pendentes</button>\n          <button (click)=\"getApprovedList()\" class=\"btn btn-success filterBtn\">Aprovadas</button>\n          <button (click)=\"getRejectedList()\" class=\"btn btn-danger filterBtn\">Rejeitadas</button>\n        </div>\n        <div class=\"col-md-12 col-lg-6\">\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"nameToSearch\" (ngModelChange)=\"getSolicitationsByName()\" placeholder=\"Nome\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"descToSearch\" (ngModelChange)=\"getSolicitationsByDesc()\" placeholder=\"Descrição\">\n          </div>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"panel-body\">\n      <table class=\"table table-striped tableList\">\n        <thead>\n          <tr>\n            <th>Nome</th>\n            <th>Descrição</th>\n            <th>Preço</th>\n            <th class=\"obsClass\">Observação</th>\n            <th>Situação</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let solicitation of solicitations | async\">\n            <td>{{solicitation.name}}</td>\n            <td>{{solicitation.description}}</td>\n            <td>{{solicitation.price | currency: 'R$ '}}</td>\n            <td class=\"obsClass\">{{solicitation.observation}}</td>\n            <td>\n              <a routerLink=\"approve/{{solicitation.id}}\" [hidden]=\"!pendingStatus(solicitation.status)\"><button type=\"button\" class=\"btn btn-primary detailsButton\">Detalhes</button></a>\n              <span [hidden]=\"pendingStatus(solicitation.status)\">{{solicitation.status}}</span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n","import { Status } from './status';\r\n\r\nexport class Solicitation {\r\n    id: number;\r\n    name: string;\r\n    description: string;0\r\n    price: number;\r\n    status: Status;\r\n    observation: string;\r\n\r\n    constructor(){\r\n        this.status = Status.PENDENTE;\r\n        this.observation = '';\r\n    }\r\n}\r\n","export enum Status {\r\n  APROVADO = \"APROVADO\", PENDENTE = \"PENDENTE\", REJEITADO= \"REJEITADO\"\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Solicitation } from 'src/app/models/solicitation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SolicitationService {\n\n  private baseUrl = 'http://localhost:8080/approvalApi/solicitations';\n\n  constructor(private http: HttpClient) { }\n\n\n  getSolicitationsList(): Observable<Solicitation[]> {\n    return this.http.get<Solicitation[]>(`${this.baseUrl}/get`);\n  }\n\n  getSolicitationById(id: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/get/${id}`);\n  }\n\n  getSolicitationByName(name: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/get/name/${name}`);\n  }\n\n  getSolicitationByDesc(desc: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/get/desc/${desc}`);\n  }\n\n  getApprovedSolicitations(): Observable<Solicitation[]> {\n    return this.http.get<Solicitation[]>(`${this.baseUrl}/get/approved`);\n  }\n\n  getRejectedSolicitations(): Observable<Solicitation[]> {\n    return this.http.get<Solicitation[]>(`${this.baseUrl}/get/rejected`);\n  }\n\n  getPendingSolicitations(): Observable<Solicitation[]> {\n    return this.http.get<Solicitation[]>(`${this.baseUrl}/get/pending`);\n  }\n\n  createSolicitation(solicitation: Solicitation): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, solicitation);\n  }\n\n  updateSolicitation(solicitation: Solicitation): Observable<Object>{\n    return this.http.put(`${this.baseUrl}/${solicitation.id}`, solicitation);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}