{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.module.ts","webpack:///src/app/components/approve-solicitation/approve-solicitation.component.ts","webpack:///src/app/components/approve-solicitation/approve-solicitation.component.html","webpack:///src/app/components/create-solicitation/create-solicitation.component.ts","webpack:///src/app/components/create-solicitation/create-solicitation.component.html","webpack:///src/app/components/solicitation-list/solicitation-list.component.ts","webpack:///src/app/components/solicitation-list/solicitation-list.component.html","webpack:///src/app/models/solicitation.ts","webpack:///src/app/models/status.ts","webpack:///src/app/services/solicitation.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","ApproveSolicitationComponent","solicitationService","route","router","solicitationToEdit","situation","APROVADO","getSolicitationById","snapshot","paramMap","get","subscribe","solicitation","navigate","status","updateSolicitation","data","onReturn","error","console","log","closeEdit","PENDENTE","changeOption","CreateSolicitationComponent","submitted","submittedSuccess","createSolicitation","onSuccess","onError","onSubmit","newSolicitation","tryAgain","SolicitationListComponent","nameToSearch","descToSearch","reloadData","solicitations","getSolicitationsList","getApprovedSolicitations","getRejectedSolicitations","getPendingSolicitations","getSolicitationByName","getSolicitationByDesc","getPendingList","getApprovedList","getRejectedList","getSolicitationsByName","getSolicitationsByDesc","Solicitation","observation","Status","SolicitationService","http","baseUrl","name","desc","post","put","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Fluxo de Aprovação';\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a routerLink=\"new\" class=\"nav-link\" routerLinkActive=\"active\">Nova Solicitação</a>\n  </li>\n    <li class=\"nav-item\">\n        <a routerLink=\"solicitations\" class=\"nav-link\" routerLinkActive=\"active\">Solicitações</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <hr>\n  <div class=\"card\">\n    <div class=\"card-body\">\n  <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n  </div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app.routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\nimport { AppComponent } from './app.component';\nimport { CreateSolicitationComponent } from './components/create-solicitation/create-solicitation.component';\nimport { SolicitationListComponent } from './components/solicitation-list/solicitation-list.component';\nimport { ApproveSolicitationComponent } from './components/approve-solicitation/approve-solicitation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateSolicitationComponent,\n    SolicitationListComponent,\n    ApproveSolicitationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CurrencyMaskModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateSolicitationComponent } from './components/create-solicitation/create-solicitation.component';\r\nimport { SolicitationListComponent } from './components/solicitation-list/solicitation-list.component';\r\nimport { ApproveSolicitationComponent } from './components/approve-solicitation/approve-solicitation.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'solicitation', pathMatch: 'full' },\r\n    { path: '', component: CreateSolicitationComponent},\r\n    { path: 'new', component: CreateSolicitationComponent},\r\n    { path: 'solicitations', component: SolicitationListComponent},\r\n    { path: 'solicitations/approve/:id', component: ApproveSolicitationComponent},\r\n];\r\n\r\n@NgModule({\r\n    imports:[RouterModule.forRoot(routes)],\r\n    exports:[RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule{\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SolicitationService } from 'src/app/services/solicitation.service';\nimport { Solicitation } from 'src/app/models/solicitation';\nimport { Status } from 'src/app/models/status';\n\n@Component({\n  selector: 'app-approve-solicitation',\n  templateUrl: './approve-solicitation.component.html',\n  styleUrls: ['./approve-solicitation.component.css']\n})\nexport class ApproveSolicitationComponent implements OnInit {\n\n  solicitationToEdit: Solicitation = new Solicitation();\n  situation: Status = Status.APROVADO;\n\n  constructor(private solicitationService: SolicitationService,\n              private route: ActivatedRoute,\n              private router: Router){ }\n\n  ngOnInit(): void {\n    this.solicitationService.getSolicitationById(this.route.snapshot.paramMap.get('id'))\n    .subscribe(solicitation => this.solicitationToEdit = solicitation);\n  }\n\n\n  closeEdit(){\n    this.router.navigate([\"/solicitations\"]);\n  }\n\n  changeOption(situation: Status) {\n    this.situation = situation;\n  }\n\n  updateSolicitation(){\n    this.solicitationToEdit.status = this.situation;\n    this.solicitationService.updateSolicitation(this.solicitationToEdit)\n    .subscribe(data => this.onReturn(data), error => console.log(error));\n  }\n\n  onReturn(data: Object){\n    console.log(data);\n    this.closeEdit();\n  }\n\n  pendingStatus(status: Status): boolean{\n    return status === Status.PENDENTE;\n  }\n\n}\n","<div>\n    <form (ngSubmit)=\"f.form.valid && updateSolicitation()\" #f=\"ngForm\">\n      <div class=\"form-group\">\n        <label for=\"name\">Nome</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" readonly required [(ngModel)]=\"solicitationToEdit.name\" name=\"name\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"name\">Descrição</label>\n        <input type=\"text\" class=\"form-control\" id=\"description\" readonly required [(ngModel)]=\"solicitationToEdit.description\" name=\"description\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"name\">Preço</label>\n        <input type=\"number\" class=\"form-control\" id=\"price\" step=\"0.01\" readonly required [(ngModel)]=\"solicitationToEdit.price\" name=\"price\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"name\">Observação</label>\n        <input type=\"text\" class=\"form-control\" id=\"observation\" required [(ngModel)]=\"solicitationToEdit.observation\" name=\"observation\" #obs=\"ngModel\">\n        <div *ngIf=\"f.submitted && obs.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"obs.errors.required\">O campo \"Observação\" é obrigatório. </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Situação</label>\n      <select class=\"form-control\" (change)=\"changeOption($event.target.value)\">\n        <option value=\"APROVADO\">Aprovada</option>\n        <option value=\"REJEITADO\">Rejeitada</option>\n      </select>\n    </div>\n      <span [hidden]=\"!pendingStatus(solicitationToEdit.status)\"><button type=\"submit\" class=\"btn btn-success commandButtons float-right\">Salvar</button></span>\n      <button (click)=\"closeEdit()\" class=\"btn btn-danger float-right commandButtons\">Cancelar</button>\n    </form>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SolicitationService } from 'src/app/services/solicitation.service';\nimport { Solicitation } from 'src/app/models/solicitation';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-solicitation',\n  templateUrl: './create-solicitation.component.html',\n  styleUrls: ['./create-solicitation.component.css']\n})\nexport class CreateSolicitationComponent implements OnInit {\n\n  solicitation: Solicitation = new Solicitation();\n  submitted = false;\n  submittedSuccess = false;\n\n  constructor(private solicitationService: SolicitationService, private router: Router) { }\n\n  ngOnInit(): void {  }\n\n  newSolicitation(): void {\n    this.submitted = false;\n    this.solicitation = new Solicitation();\n  }\n\n  tryAgain(): void {\n    this.submitted = false;\n    this.submittedSuccess = false;\n  }\n\n  onSubmit(){\n    this.solicitationService.createSolicitation(this.solicitation)\n    .subscribe(data => this.onSuccess(data), error => this.onError(error));\n    this.submitted = true;\n\n  }\n\n  onSuccess(data: Object){\n    console.log(data);\n    this.submittedSuccess = true;\n  }\n\n  onError(error: Object){\n    console.log(error);\n    this.submittedSuccess = false;\n  }\n\n  gotoList(){\n    this.router.navigate([\"/solicitations\"]);\n  }\n}\n","<h3>Nova solicitação</h3>\n<div [hidden]=\"submitted\">\n  <form (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"name\">Nome</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"solicitation.name\" name=\"name\" placeholder=\"Digite seu nome\" #name=\"ngModel\">\n      <div *ngIf=\"f.submitted && name.invalid\" class=\"alert alert-danger\">\n        <div *ngIf=\"name.errors.required\">O campo \"Nome\" é obrigatório. </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"name\">Descrição</label>\n        <input type=\"textarea\" class=\"form-control\" id=\"description\" required [(ngModel)]=\"solicitation.description\" name=\"description\" placeholder=\"Digite a descrição do item\" #desc=\"ngModel\">\n        <div *ngIf=\"f.submitted && desc.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"desc.errors.required\">O campo \"Descrição\" é obrigatório. </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"name\">Preço</label>\n        <input type=\"text\" class=\"form-control\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\"  id=\"price\" required [(ngModel)]=\"solicitation.price\" name=\"price\" placeholder=\"R$ 0,00\" #price=\"ngModel\">\n        <div *ngIf=\"f.submitted && price.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"price.errors.required\">O campo \"Preço\" é obrigatório. </div>\n        </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success float-right\">Salvar</button>\n  </form>\n</div>\n\n<div [hidden]=\"!(submitted && submittedSuccess)\">\n  <h4>Solicitação enviada!</h4>\n  <button class=\"btn btn-success\" (click)=\"newSolicitation()\">Nova Solicitação</button>\n</div>\n\n<div [hidden]=\"!(submitted && !submittedSuccess)\">\n  <h4>Erro ao enviar solicitação!</h4>\n  <button class=\"btn btn-success\" (click)=\"tryAgain()\">Tentar novamente</button>\n</div>\n","import { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SolicitationService } from 'src/app/services/solicitation.service';\nimport { Solicitation } from 'src/app/models/solicitation';\nimport { Status } from 'src/app/models/status';\n\n@Component({\n  selector: 'app-solicitation-list',\n  templateUrl: './solicitation-list.component.html',\n  styleUrls: ['./solicitation-list.component.css']\n})\nexport class SolicitationListComponent implements OnInit {\n\n  solicitations: Observable<Solicitation[]>;\n  nameToSearch = '';\n  descToSearch = '';\n\n  constructor(private solicitationService: SolicitationService,\n              private router: Router){}\n\n  ngOnInit(){\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.solicitations = this.solicitationService.getSolicitationsList();\n  }\n\n  getApprovedList() {\n    this.solicitations = this.solicitationService.getApprovedSolicitations();\n  }\n\n  getRejectedList() {\n    this.solicitations = this.solicitationService.getRejectedSolicitations();\n  }\n\n  getPendingList() {\n    this.solicitations = this.solicitationService.getPendingSolicitations();\n  }\n\n  getSolicitationsByName() {\n    if (this.nameToSearch !== ''){\n      this.solicitations = this.solicitationService.getSolicitationByName(this.nameToSearch);\n      this.descToSearch = '';\n    } else {\n      this.reloadData();\n    }\n  }\n\n  getSolicitationsByDesc() {\n    if (this.descToSearch !== ''){\n      this.solicitations = this.solicitationService.getSolicitationByDesc(this.descToSearch);\n      this.nameToSearch = '';\n    } else {\n      this.reloadData();\n    }\n  }\n\n  pendingStatus(status: Status): boolean{\n    return status === Status.PENDENTE;\n  }\n\n\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n      <h2>Lista de solicitações</h2>\n      <div class=\"row inputFilter\">\n        <div class=\"col-md-12 col-lg-6\">\n          <button (click)=\"reloadData()\" class=\"btn btn-info filterBtn\">Todas</button>\n          <button (click)=\"getPendingList()\" class=\"btn btn-primary filterBtn\">Pendentes</button>\n          <button (click)=\"getApprovedList()\" class=\"btn btn-success filterBtn\">Aprovadas</button>\n          <button (click)=\"getRejectedList()\" class=\"btn btn-danger filterBtn\">Rejeitadas</button>\n        </div>\n        <div class=\"col-md-12 col-lg-6\">\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"nameToSearch\" (ngModelChange)=\"getSolicitationsByName()\" placeholder=\"Nome\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"descToSearch\" (ngModelChange)=\"getSolicitationsByDesc()\" placeholder=\"Descrição\">\n          </div>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"panel-body\">\n      <table class=\"table table-striped tableList\">\n        <thead>\n          <tr>\n            <th>Nome</th>\n            <th>Descrição</th>\n            <th>Preço</th>\n            <th class=\"obsClass\">Observação</th>\n            <th>Situação</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let solicitation of solicitations | async\">\n            <td>{{solicitation.name}}</td>\n            <td>{{solicitation.description}}</td>\n            <td>{{solicitation.price | currency: 'R$ '}}</td>\n            <td class=\"obsClass\">{{solicitation.observation}}</td>\n            <td>\n              <a routerLink=\"approve/{{solicitation.id}}\" [hidden]=\"!pendingStatus(solicitation.status)\"><button type=\"button\" class=\"btn btn-primary detailsButton\">Detalhes</button></a>\n              <span [hidden]=\"pendingStatus(solicitation.status)\">{{solicitation.status}}</span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n","import { Status } from './status';\r\n\r\nexport class Solicitation {\r\n    id: number;\r\n    name: string;\r\n    description: string;0\r\n    price: number;\r\n    status: Status;\r\n    observation: string;\r\n\r\n    constructor(){\r\n        this.status = Status.PENDENTE;\r\n        this.observation = '';\r\n    }\r\n}\r\n","export enum Status {\r\n  APROVADO = \"APROVADO\", PENDENTE = \"PENDENTE\", REJEITADO= \"REJEITADO\"\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Solicitation } from 'src/app/models/solicitation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SolicitationService {\n\n  private baseUrl = 'http://localhost:8080/approvalApi/solicitations';\n\n  constructor(private http: HttpClient) { }\n\n\n  getSolicitationsList(): Observable<Solicitation[]> {\n    return this.http.get<Solicitation[]>(`${this.baseUrl}/get`);\n  }\n\n  getSolicitationById(id: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/get/${id}`);\n  }\n\n  getSolicitationByName(name: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/get/name/${name}`);\n  }\n\n  getSolicitationByDesc(desc: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/get/desc/${desc}`);\n  }\n\n  getApprovedSolicitations(): Observable<Solicitation[]> {\n    return this.http.get<Solicitation[]>(`${this.baseUrl}/get/approved`);\n  }\n\n  getRejectedSolicitations(): Observable<Solicitation[]> {\n    return this.http.get<Solicitation[]>(`${this.baseUrl}/get/rejected`);\n  }\n\n  getPendingSolicitations(): Observable<Solicitation[]> {\n    return this.http.get<Solicitation[]>(`${this.baseUrl}/get/pending`);\n  }\n\n  createSolicitation(solicitation: Solicitation): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, solicitation);\n  }\n\n  updateSolicitation(solicitation: Solicitation): Observable<Object>{\n    return this.http.put(`${this.baseUrl}/${solicitation.id}`, solicitation);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}